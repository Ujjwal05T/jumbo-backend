"""flow_corrections_and_schema_updates

Revision ID: c5778e30b0aa
Revises: 6993ae0490f3
Create Date: 2025-07-29 16:09:21.614490

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c5778e30b0aa'
down_revision: Union[str, None] = '6993ae0490f3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Add GST number to client master
    op.add_column('client_master', sa.Column('gst_number', sa.String(length=50), nullable=True))
    op.create_index(op.f('ix_client_master_gst_number'), 'client_master', ['gst_number'], unique=False)
    
    # Clear notes data before dropping column
    op.execute("UPDATE order_master SET notes = NULL")
    
    # Drop index before altering inventory_master width_inches column
    op.drop_index('ix_inventory_master_width_inches', table_name='inventory_master')
    op.alter_column('inventory_master', 'width_inches',
               existing_type=sa.INTEGER(),
               type_=sa.Numeric(precision=6, scale=2),
               existing_nullable=False)
    # Recreate index
    op.create_index(op.f('ix_inventory_master_width_inches'), 'inventory_master', ['width_inches'], unique=False)
    
    # Add new columns to order_item
    op.add_column('order_item', sa.Column('item_status', sa.String(length=50), nullable=False, server_default='created'))
    op.add_column('order_item', sa.Column('started_production_at', sa.DateTime(), nullable=True))
    op.add_column('order_item', sa.Column('moved_to_warehouse_at', sa.DateTime(), nullable=True))
    op.add_column('order_item', sa.Column('dispatched_at', sa.DateTime(), nullable=True))
    op.alter_column('order_item', 'width_inches',
               existing_type=sa.INTEGER(),
               type_=sa.Numeric(precision=6, scale=2),
               existing_nullable=False)
    
    # Add tracking columns to order_master and drop notes
    op.add_column('order_master', sa.Column('started_production_at', sa.DateTime(), nullable=True))
    op.add_column('order_master', sa.Column('moved_to_warehouse_at', sa.DateTime(), nullable=True))
    op.add_column('order_master', sa.Column('dispatched_at', sa.DateTime(), nullable=True))
    op.drop_column('order_master', 'notes')
    
    # Alter width_inches for pending order tables
    op.alter_column('pending_order_item', 'width_inches',
               existing_type=sa.INTEGER(),
               type_=sa.Numeric(precision=6, scale=2),
               existing_nullable=False)
    op.alter_column('pending_order_master', 'width_inches',
               existing_type=sa.INTEGER(),
               type_=sa.Numeric(precision=6, scale=2),
               existing_nullable=False)
    
    # Update existing order statuses to new enum values
    op.execute("UPDATE order_master SET status = 'created' WHERE status = 'pending'")
    op.execute("UPDATE order_master SET status = 'in_process' WHERE status = 'processing'")
    op.execute("UPDATE order_master SET status = 'completed' WHERE status = 'partially_fulfilled' OR status = 'completed'")
    
    # Update existing pending order statuses
    op.execute("UPDATE pending_order_master SET status = 'included_in_plan' WHERE status = 'in_production'")
    op.execute("UPDATE pending_order_item SET status = 'included_in_plan' WHERE status = 'in_production'")
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Revert status updates
    op.execute("UPDATE order_master SET status = 'pending' WHERE status = 'created'")
    op.execute("UPDATE order_master SET status = 'processing' WHERE status = 'in_process'")
    op.execute("UPDATE pending_order_master SET status = 'in_production' WHERE status = 'included_in_plan'")
    op.execute("UPDATE pending_order_item SET status = 'in_production' WHERE status = 'included_in_plan'")
    
    # Revert pending order tables
    op.alter_column('pending_order_master', 'width_inches',
               existing_type=sa.Numeric(precision=6, scale=2),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('pending_order_item', 'width_inches',
               existing_type=sa.Numeric(precision=6, scale=2),
               type_=sa.INTEGER(),
               existing_nullable=False)
    
    # Revert order_master changes
    op.add_column('order_master', sa.Column('notes', sa.VARCHAR(collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True))
    op.drop_column('order_master', 'dispatched_at')
    op.drop_column('order_master', 'moved_to_warehouse_at')
    op.drop_column('order_master', 'started_production_at')
    
    # Revert order_item changes
    op.alter_column('order_item', 'width_inches',
               existing_type=sa.Numeric(precision=6, scale=2),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.drop_column('order_item', 'dispatched_at')
    op.drop_column('order_item', 'moved_to_warehouse_at')
    op.drop_column('order_item', 'started_production_at')
    op.drop_column('order_item', 'item_status')
    
    # Revert inventory_master changes (drop and recreate index)
    op.drop_index(op.f('ix_inventory_master_width_inches'), table_name='inventory_master')
    op.alter_column('inventory_master', 'width_inches',
               existing_type=sa.Numeric(precision=6, scale=2),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.create_index('ix_inventory_master_width_inches', 'inventory_master', ['width_inches'], unique=False)
    
    # Revert client_master changes
    op.drop_index(op.f('ix_client_master_gst_number'), table_name='client_master')
    op.drop_column('client_master', 'gst_number')
    
    # ### end Alembic commands ###
