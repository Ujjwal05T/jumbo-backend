"""Add quantity_fulfilled with proper defaults

Revision ID: ede5acee39bc
Revises: 
Create Date: 2025-07-23 14:44:03.750198

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mssql

# revision identifiers, used by Alembic.
revision: str = 'ede5acee39bc'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('production_orders',
    sa.Column('id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('gsm', sa.Integer(), nullable=False),
    sa.Column('bf', sa.Numeric(precision=4, scale=2), nullable=False),
    sa.Column('shade', sa.String(length=50), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_by_id', mssql.UNIQUEIDENTIFIER(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_production_orders_id'), 'production_orders', ['id'], unique=False)
    op.create_table('status_logs',
    sa.Column('id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('model_type', sa.String(length=50), nullable=False),
    sa.Column('model_id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('old_status', sa.String(length=50), nullable=True),
    sa.Column('new_status', sa.String(length=50), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('changed_by_id', mssql.UNIQUEIDENTIFIER(), nullable=True),
    sa.Column('changed_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['changed_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='Audit log for status changes across all models'
    )
    op.create_index(op.f('ix_status_logs_id'), 'status_logs', ['id'], unique=False)
    op.create_index(op.f('ix_status_logs_model_id'), 'status_logs', ['model_id'], unique=False)
    op.create_table('inventory_logs',
    sa.Column('id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('roll_id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('order_id', mssql.UNIQUEIDENTIFIER(), nullable=True),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('previous_status', sa.String(length=50), nullable=True),
    sa.Column('new_status', sa.String(length=50), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_by_id', mssql.UNIQUEIDENTIFIER(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['roll_id'], ['cut_rolls.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_inventory_logs_id'), 'inventory_logs', ['id'], unique=False)
    op.add_column('cutting_plans', sa.Column('order_id', mssql.UNIQUEIDENTIFIER(), nullable=False))
    op.add_column('cutting_plans', sa.Column('cut_pattern', sa.Text(), nullable=False))
    op.add_column('cutting_plans', sa.Column('actual_waste_percentage', sa.Numeric(precision=5, scale=2), nullable=True))
    op.add_column('cutting_plans', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('cutting_plans', sa.Column('completed_at', sa.DateTime(), nullable=True))
    op.create_foreign_key(None, 'cutting_plans', 'orders', ['order_id'], ['id'])
    op.drop_column('cutting_plans', 'plan_data')
    op.add_column('jumbo_rolls', sa.Column('production_order_id', mssql.UNIQUEIDENTIFIER(), nullable=True))
    op.create_foreign_key(None, 'jumbo_rolls', 'production_orders', ['production_order_id'], ['id'])
     # First, add the column as nullable
    op.add_column('orders', sa.Column('quantity_fulfilled', sa.Integer(), nullable=True))
    
    # Set default value for existing rows
    op.execute("UPDATE orders SET quantity_fulfilled = 0")
    
    # Now alter the column to be non-nullable
    op.alter_column('orders', 'quantity_fulfilled', existing_type=sa.Integer(), nullable=False)
    op.add_column('orders', sa.Column('parent_order_id', mssql.UNIQUEIDENTIFIER(), nullable=True))
    op.add_column('orders', sa.Column('original_order_id', mssql.UNIQUEIDENTIFIER(), nullable=True))
    op.add_column('orders', sa.Column('notes', sa.Text(), nullable=True))
    op.alter_column('orders', 'status',
               existing_type=sa.VARCHAR(length=20, collation='SQL_Latin1_General_CP1_CI_AS'),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.create_foreign_key(None, 'orders', 'orders', ['parent_order_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'orders', type_='foreignkey')
    op.alter_column('orders', 'status',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20, collation='SQL_Latin1_General_CP1_CI_AS'),
               existing_nullable=False)
    op.drop_column('orders', 'notes')
    op.drop_column('orders', 'original_order_id')
    op.drop_column('orders', 'parent_order_id')
    op.drop_column('orders', 'quantity_fulfilled')
    op.drop_constraint(None, 'jumbo_rolls', type_='foreignkey')
    op.drop_column('jumbo_rolls', 'production_order_id')
    op.add_column('cutting_plans', sa.Column('plan_data', sa.VARCHAR(collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'cutting_plans', type_='foreignkey')
    op.drop_column('cutting_plans', 'completed_at')
    op.drop_column('cutting_plans', 'created_at')
    op.drop_column('cutting_plans', 'actual_waste_percentage')
    op.drop_column('cutting_plans', 'cut_pattern')
    op.drop_column('cutting_plans', 'order_id')
    op.drop_index(op.f('ix_inventory_logs_id'), table_name='inventory_logs')
    op.drop_table('inventory_logs')
    op.drop_index(op.f('ix_status_logs_model_id'), table_name='status_logs')
    op.drop_index(op.f('ix_status_logs_id'), table_name='status_logs')
    op.drop_table('status_logs')
    op.drop_index(op.f('ix_production_orders_id'), table_name='production_orders')
    op.drop_table('production_orders')
    # ### end Alembic commands ###
